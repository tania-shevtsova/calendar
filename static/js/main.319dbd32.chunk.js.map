{"version":3,"sources":["assets/calendar.svg","assets/cancel.svg","assets/clock.svg","App.js","index.js"],"names":["evtId","ModalCreate","props","Modal","isOpen","open","className","FormGroup","Button","onClick","toggle","src","cancel","alt","Input","placeholder","type","onChange","handleChange","value","name","calendar","placeholderText","selected","date","onChangeDate","minDate","moment","toDate","clock","showSecond","onChangeTime","format","use12Hours","inputReadOnly","note","color","onChangeComplete","handleChangeComplete","id","submit","ModalUpdate","openEdit","toggleEdit","handleEditChange","title","start","extendedProps","description","handleRemove","handleEdit","App","state","setState","e","target","handleEventClick","event","eventId","evt","background","backgroundColor","handleSelect","time","handleCreate","newdate","Date","calendarRef","current","getApi","view","unselect","length","toast","error","newObject","end","endStr","textColor","prevState","currentEvents","success","newEvents","map","prop","key","remove","undefined","filter","hex","handlePrevClick","prev","handleNextClick","next","hour","minute","React","createRef","this","ref","headerToolbar","center","customButtons","backButton","text","click","nextButton","defaultView","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","resourceTimelinePlugin","listPlugin","select","editable","droppable","selectable","events","eventClick","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.319dbd32.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/calendar.43530344.svg\";","export default __webpack_public_path__ + \"static/media/cancel.f24b4570.svg\";","export default __webpack_public_path__ + \"static/media/clock.868e0436.svg\";","import React from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport listPlugin from \"@fullcalendar/list\";\nimport \"@fullcalendar/common/main.css\";\nimport \"@fullcalendar/daygrid/main.css\";\nimport \"@fullcalendar/timegrid/main.css\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport moment from \"moment\";\nimport resourceTimelinePlugin from \"@fullcalendar/resource-timeline\";\nimport \"./App.css\";\nimport DatePicker from \"react-datepicker\";\nimport TimePicker from \"rc-time-picker\";\nimport \"rc-time-picker/assets/index.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { CirclePicker } from \"react-color\";\nimport calendar from \"./assets/calendar.svg\";\nimport cancel from \"./assets/cancel.svg\";\nimport clock from \"./assets/clock.svg\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Button, FormGroup, Input, Modal } from \"reactstrap\";\nlet evtId = 0;\nclass App extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      currentEvents: [],\n      open: false,\n      openEdit: false,\n      name: \"\",\n      date: new Date(),\n      time: moment().hour(0).minute(0),\n      note: \"\",\n      evt: {\n        title: \"\",\n        start: \"\",\n        extendedProps: {\n          description: \"\",\n        },\n      },\n      background: \"\",\n    };\n\n    this.calendarRef = React.createRef();\n  }\n\n  toggle = () => {\n    const { open } = this.state;\n    this.setState({ open: !open });\n  };\n\n  handleChange = (name) => (e) => {\n    this.setState({\n      [name]: e.target.value,\n    });\n  };\n\n  handleEventClick = ({ event }) => {\n    this.toggleEdit();\n    this.setState({ date: \"\", name: \"\" });\n    this.setState({\n      eventId: event.id,\n      event: event,\n      evt: event,\n      note: event.extendedProps.description,\n      background: event.backgroundColor,\n    });\n  };\n\n  toggleEdit = () => {\n    const { openEdit } = this.state;\n    this.setState({ openEdit: !openEdit });\n  };\n\n  handleSelect = () => {\n    this.setState({ name: \"\", date: \"\", time: \"\", note: \"\" });\n    this.toggle();\n  };\n\n  handleCreate = () => {\n    const { date, time, name, background, note } = this.state;\n    let newdate = new Date(moment(date).format(\"MM/DD/YYYY\") + \" \" + time);\n    let calendarApi = this.calendarRef.current.getApi().view.calendar;\n    calendarApi.unselect();\n    if (!name || !date || !time) {\n      toast.error(\"Please, fill in required field\");\n      return;\n    }\n    if (name.length > 30) {\n      toast.error(\"You have reached your maximum limit of characters allowed\");\n      return;\n    } else {\n      let newObject = {\n        title: name,\n        start: newdate,\n        end: this.calendarRef.current.getApi().endStr,\n        id: evtId++,\n        backgroundColor: background,\n        textColor: \"#ffffff\",\n        description: note,\n      };\n      this.setState((prevState) => ({\n        currentEvents: [...prevState.currentEvents, newObject],\n      }));\n      toast.success(\"🦄Event has been created!\");\n    }\n\n    this.toggle();\n  };\n\n  handleEdit = () => {\n    const {\n      date,\n      time,\n      evt,\n      currentEvents,\n      event,\n      name,\n      eventId,\n      background,\n      note,\n    } = this.state;\n    let newdate = date\n      ? new Date(moment(date).format(\"MM/DD/YYYY\") + \" \" + time)\n      : new Date(moment(evt.start).format(\"MM/DD/YYYY\") + \" \" + time);\n\n    let newEvents = currentEvents.map((prop, key) => {\n      if (prop.id + \"\" === eventId + \"\") {\n        if (newdate) {\n          event.remove();\n          if (evt.extendedProps) {\n            this.setState({\n              note: evt.extendedProps.description,\n            });\n          }\n          return {\n            ...prop,\n            title: name ? name : evt.title,\n            start: newdate,\n            backgroundColor: background,\n            description: note,\n          };\n        }\n      } else {\n        return prop;\n      }\n    });\n    this.setState({\n      currentEvents: newEvents,\n      eventId: undefined,\n      event: undefined,\n    });\n    toast.success(\"🦄Event has been updated!\", { className: \"update-alert\" });\n    this.toggleEdit();\n  };\n\n  handleRemove = () => {\n    const { currentEvents, event, eventId } = this.state;\n    var newEvents = currentEvents.filter((prop) => prop.id + \"\" !== eventId);\n    event.remove();\n    this.setState({\n      currentEvents: newEvents,\n      eventId: undefined,\n      event: undefined,\n    });\n\n    toast.success(\"🦄Event has been deleted!\", { className: \"deleted-alert\" });\n    this.toggleEdit();\n  };\n\n  handleChangeComplete = (color) => {\n    this.setState({ background: color.hex });\n  };\n\n  handlePrevClick = () => {\n    this.calendarRef.current &&\n      this.calendarRef.current.getApi().view.calendar.prev();\n  };\n  handleNextClick = () => {\n    this.calendarRef.current &&\n      this.calendarRef.current.getApi().view.calendar.next();\n  };\n\n  onChangeDate = (date) => {\n    this.setState({ date: date });\n  };\n  onChangeTime = (value) => {\n    this.setState({ time: value && value.format(\"HH:mm:ss\") });\n  };\n\n  handleEditChange = (e) => {\n    const { evt } = this.state;\n    this.setState({\n      evt: {\n        title: \"\",\n        start: evt.start,\n        extendedProps: {\n          description: evt.extendedProps.description,\n        },\n      },\n      name: e.target.value,\n    });\n  };\n\n  render() {\n    const {\n      currentEvents,\n      open,\n      background,\n      date,\n      name,\n      note,\n      openEdit,\n      evt,\n    } = this.state;\n    return (\n      <div className=\"App\">\n        <FullCalendar\n          ref={this.calendarRef}\n          headerToolbar={{\n            start: \"today,backButton,nextButton\",\n            center: \"title\",\n            end: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\",\n          }}\n          customButtons={{\n            backButton: {\n              text: \"Back\",\n              click: this.handlePrevClick,\n            },\n            nextButton: {\n              text: \"Next\",\n              click: this.handleNextClick,\n            },\n          }}\n          defaultView=\"dayGridMonth\"\n          plugins={[\n            dayGridPlugin,\n            timeGridPlugin,\n            interactionPlugin,\n            resourceTimelinePlugin,\n            listPlugin,\n          ]}\n          select={this.handleSelect}\n          editable={true}\n          droppable={true}\n          selectable\n          events={currentEvents}\n          eventClick={this.handleEventClick}\n        />\n        {open && (\n          <ModalCreate\n            open={open}\n            onChangeDate={this.onChangeDate}\n            onChangeTime={this.onChangeTime}\n            color={background}\n            handleChangeComplete={this.handleChangeComplete}\n            date={date}\n            name={name}\n            handleChange={this.handleChange}\n            submit={this.handleCreate}\n            toggle={this.toggle}\n            note={note}\n          ></ModalCreate>\n        )}\n\n        {openEdit && (\n          <ModalUpdate\n            openEdit={openEdit}\n            toggleEdit={this.toggleEdit}\n            handleEditChange={this.handleEditChange}\n            name={name}\n            title={evt.title}\n            date={date}\n            start={evt.start}\n            color={background}\n            extendedProps={evt.extendedProps}\n            handleRemove={this.handleRemove}\n            handleEdit={this.handleEdit}\n            handleChange={this.handleChange}\n            handleChangeComplete={this.handleChangeComplete}\n            onChangeDate={this.onChangeDate}\n            onChangeTime={this.onChangeTime}\n            note={note}\n          ></ModalUpdate>\n        )}\n        <ToastContainer />\n      </div>\n    );\n  }\n}\n\nfunction ModalCreate(props) {\n  return (\n    <>\n      <Modal isOpen={props.open} className=\"content\">\n        <div className=\"modal-body\">\n          <form className=\"new-event--form\">\n            <FormGroup>\n              <Button onClick={props.toggle}>\n                <img src={cancel} alt=\"cancel icon\" />\n              </Button>\n              <Input\n                className=\"input\"\n                placeholder=\"event name\"\n                type=\"text\"\n                onChange={props.handleChange(\"name\")}\n                value={props.name}\n              />\n            </FormGroup>\n            <FormGroup>\n              <img src={calendar} className=\"icon\" alt=\"calendar icon\" />\n              <DatePicker\n                placeholderText=\"event date\"\n                selected={props.date}\n                onChange={props.onChangeDate}\n                minDate={moment().toDate()}\n              />\n            </FormGroup>\n            <FormGroup>\n              <img src={clock} className=\"icon\" alt=\"clock icon\" />\n              <TimePicker\n                showSecond={false}\n                placeholder=\"event time\"\n                className=\"xxx\"\n                onChange={props.onChangeTime}\n                format=\"h:mm a\"\n                use12Hours\n                inputReadOnly\n              />\n            </FormGroup>\n            <FormGroup>\n              <Input\n                onChange={props.handleChange(\"note\")}\n                value={props.note}\n                className=\"input\"\n                placeholder=\"notes\"\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <CirclePicker\n                color={props.color}\n                onChangeComplete={props.handleChangeComplete}\n              />\n            </FormGroup>\n          </form>\n        </div>\n        <div className=\"modal-footer\">\n          <Button\n            id=\"btn-cancel\"\n            className=\"ml-auto\"\n            color=\"link\"\n            type=\"button\"\n            onClick={props.toggle}\n          >\n            Cancel\n          </Button>\n          <Button\n            className=\"new-event--add\"\n            color=\"primary\"\n            type=\"button\"\n            onClick={props.submit}\n          >\n            Save\n          </Button>\n        </div>\n      </Modal>\n    </>\n  );\n}\n\nfunction ModalUpdate(props) {\n  return (\n    <>\n      <Modal isOpen={props.openEdit} className=\"content\">\n        <div className=\"modal-body\">\n          <form className=\"new-event--form\">\n            <FormGroup>\n              <Button onClick={props.toggleEdit}>\n                <img src={cancel} alt=\"cancel icon\" />\n              </Button>\n              <Input\n                className=\"input\"\n                placeholder=\"event name\"\n                type=\"text\"\n                onChange={props.handleEditChange}\n                value={props.title || props.name}\n              />\n            </FormGroup>\n            <FormGroup>\n              <img src={calendar} className=\"icon\" alt=\"calendar icon\" />\n              <DatePicker\n                placeholderText={moment(props.start).format(\"MM/DD/YYYY\")}\n                selected={props.date}\n                onChange={props.onChangeDate}\n                minDate={moment().toDate()}\n              />\n            </FormGroup>\n            <FormGroup>\n              <img src={clock} className=\"icon\" alt=\"clock icon\" />\n              <TimePicker\n                showSecond={false}\n                placeholder={moment(props.start).format(\"h:mm a\")}\n                className=\"xxx\"\n                onChange={props.onChangeTime}\n                format=\"h:mm a\"\n                use12Hours\n                inputReadOnly\n              />\n            </FormGroup>\n            <FormGroup>\n              <Input\n                onChange={props.handleChange(\"note\")}\n                className=\"input\"\n                placeholder={\n                  props.extendedProps && props.extendedProps.description\n                }\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <CirclePicker\n                color={props.color}\n                onChangeComplete={props.handleChangeComplete}\n              />\n            </FormGroup>\n          </form>\n        </div>\n        <div className=\"modal-footer\">\n          <Button\n            id=\"btn-discard\"\n            className=\"ml-auto\"\n            color=\"link\"\n            type=\"button\"\n            onClick={props.handleRemove}\n          >\n            Discard\n          </Button>\n          <Button\n            className=\"new-event--add\"\n            color=\"primary\"\n            type=\"button\"\n            onClick={props.handleEdit}\n          >\n            Edit\n          </Button>\n        </div>\n      </Modal>\n    </>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}